{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.usersUrl = 'http://localhost:8080/users';\n  }\n  findAll() {\n    return this.http.get(this.usersUrl);\n  }\n  /*   public find(id:string): Observable<User>{\r\n      return this.http.get<User>(this.usersUrl+'/'+id+'.json');\r\n    } */\n  save(user) {\n    return this.http.post(this.usersUrl, user, {\n      responseType: 'text'\n    });\n  }\n  delete(user) {\n    return this.http.delete(this.usersUrl + '/' + user.id + '.json');\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAG,6BAA6B;EAC/C;EAEOC,OAAO;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,QAAQ,CAAC;EAC7C;EAEF;;;EAISG,IAAI,CAACC,IAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,QAAQ,EAAEI,IAAI,EAAE;MAAEE,YAAY,EAAE;IAAgB,CAAE,CAAC;EACtF;EAEOC,MAAM,CAACH,IAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACQ,MAAM,CAAO,IAAI,CAACP,QAAQ,GAAC,GAAG,GAACI,IAAI,CAACI,EAAE,GAAC,OAAO,CAAC;EAChE;;AAtBWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YADE;AAAM","names":["UserService","constructor","http","usersUrl","findAll","get","save","user","post","responseType","delete","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Coding\\HN\\FMTN\\Final\\project-8\\frontend\\src\\app\\user-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  private usersUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.usersUrl = 'http://localhost:8080/users';\n  }\n\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n\n/*   public find(id:string): Observable<User>{\n    return this.http.get<User>(this.usersUrl+'/'+id+'.json');\n  } */\n\n  public save(user: User) {\n    return this.http.post<User>(this.usersUrl, user, { responseType: 'text' as 'json' });\n  }\n\n  public delete(user: User) {\n  return this.http.delete<User>(this.usersUrl+'/'+user.id+'.json');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}